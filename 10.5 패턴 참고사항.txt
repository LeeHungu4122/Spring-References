자바 앱 => 안드로이드 프레임워크
자바 웹 => 스프링 프레임워크

- 옵저버 => interface 사용. 자격부여?
- 싱글톤 => 객체 갯수 조절.(무조건 1개가 아니고 조절가능.)
	class 학교 {
		static 학교 a학교;
		private 학교() {
		}

		static 학교 get학교() {
			if(a학교 == null) {a학교 = new 학교();}
			return a학교;
		}	
	}
- 팩토리 메서드 => 
	객체는 만드는것 보다 사용하는게 쉽다. 그래서 new ~~(); 를 잘 안쓰고 
	오리 a청둥오리 = 오리공장.get오리("청둥"); 이런식으로 대부분 사용.
	(오리를 만드는 레시피를 오리공장 만 알면 자유자재로 오리종류를 만들 수 있다.)
	큰 틀 안에서 기능들을 만들고 조립하여 사용하는 것.
- 스트레티지(전략 패턴) => 
	오리 a청둥오리 = new 청둥오리(); 이런식말고 오리 a청둥오리 = new 오리();
	이런식으로 해서 기능들을 a청둥오리.set종류("청둥") 이런식으로 기능을 여러개 만들어서 조합하는 패턴.
	(ex) 20가지 부품으로 조합을 해서 여러가지 물건을 만드는 방식. 이라고 생각.)



프로그래밍에서 응집성은 높아야 결합성은 낮아야 좋다.